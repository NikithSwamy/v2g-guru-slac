gControlPilotObserverMeasure_A_ButNotLongEnough = 
 gControlPilotWireMeasureA && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements < ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_A_LongEnough = 
 gControlPilotWireMeasureA && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements >= ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_B_ButNotLongEnough = 
 gControlPilotWireMeasureB && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements < ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_B_LongEnough = 
 gControlPilotWireMeasureB && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements >= ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_C_ButNotLongEnough = 
 gControlPilotWireMeasureC && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements < ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_C_LongEnough = 
 gControlPilotWireMeasureC && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements >= ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_D_LongEnough = 
 gControlPilotWireMeasureD && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements >= ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_D_ButNotLongEnough = 
 gControlPilotWireMeasureD && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements < ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_E_LongEnough = 
 gControlPilotWireMeasureE && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements >= ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_E_ButNotLongEnough = 
 gControlPilotWireMeasureE && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements < ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_F_LongEnough = 
 gControlPilotWireMeasureF && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements >= ControlPilotObserver_DetectStateThreshold) ;

gControlPilotObserverMeasure_F_ButNotLongEnough = 
 gControlPilotWireMeasureF && (ControlPilotObserver_CountOfConsecutiveConstantMeasurements < ControlPilotObserver_DetectStateThreshold) ;


sm{
    ControlPilotObserver;
    sm{
        ObserveState;
        states{ Initial;
                Unknown;
                UnknownA;
                UnknownB;
                UnknownC;
                UnknownD;
                UnknownE;
                UnknownF;
                A;
                B;
                C;
                D;
                E;
                F;
            };
            
        on_enter{
            {
                ControlPilotObserver_CountOfConsecutiveConstantMeasurements = 0;
                if (!ControlPilotObserver_ExternallyGeneratedSamplingEvents) 
                 start_periodic_timer(ControlPilotObserver_SamplingDelta,evControlPilotObserver_Measure,ControlPilotObserverSamplingTimer);
            }
        };
        on_exit{
            kill_timer(ControlPilotObserverSamplingTimer);
        };
        Actions{
            doIncrementSampleCtr{
                ControlPilotObserver_CountOfConsecutiveConstantMeasurements = ControlPilotObserver_CountOfConsecutiveConstantMeasurements + 1;
            };
            doResetIncrementSampleCtr{
                ControlPilotObserver_CountOfConsecutiveConstantMeasurements = 0;
            };
        };

        // Initial => ...

        t{  Initial;
            UnknownA;
            gControlPilotWireMeasureA;
        };

        t{  Initial;
            UnknownB;
            gControlPilotWireMeasureB;
        };
        t{  Initial;
            UnknownC;
            gControlPilotWireMeasureC;
        };

        t{  Initial;
            UnknownD;
            gControlPilotWireMeasureD;
        };

        t{  Initial;
            UnknownE;
            gControlPilotWireMeasureE;
        };

        t{  Initial;
            UnknownF;
            gControlPilotWireMeasureF;
        };

        t{  Initial;
            Unknown;
            gControlPilotWireMeasureUnknownState;
        };


        //UnknownA => ...

        t{  UnknownA;
            UnknownA;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_A_ButNotLongEnough;
            doIncrementSampleCtr;
        };

        t{  UnknownA;
            A;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_A_LongEnough;
        };

        t{  UnknownA;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureA;
            doResetIncrementSampleCtr;
        };

        // B => ...

        t{  B;
            B;
            evControlPilotObserver_Measure;
            gControlPilotWireMeasureB;
        };

        t{  B;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureB;
            doResetIncrementSampleCtr;
        };


        //UnknownB => ...

        t{  UnknownB;
            UnknownB;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_B_ButNotLongEnough;
            doIncrementSampleCtr;
        };

        t{  UnknownB;
            B;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_B_LongEnough;
        };

        t{  UnknownB;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureB;
            doResetIncrementSampleCtr;
        };

        // B => ...

        t{  B;
            B;
            evControlPilotObserver_Measure;
            gControlPilotWireMeasureB;
        };

        t{  B;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureB;
            doResetIncrementSampleCtr;
        };

        //UnknownC => ...

        t{  UnknownC;
            UnknownC;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_C_ButNotLongEnough;
            doIncrementSampleCtr;
        };

        t{  UnknownC;
            C;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_C_LongEnough;
        };

        t{  UnknownC;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureC;
            doResetIncrementSampleCtr;
        };

        // C => ...

        t{  C;
            C;
            evControlPilotObserver_Measure;
            gControlPilotWireMeasureC;
        };

        t{  C;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureC;
            doResetIncrementSampleCtr;
        };

        //UnknownD => ...

        t{  UnknownD;
            UnknownD;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_D_ButNotLongEnough;
            doIncrementSampleCtr;
        };

        t{  UnknownD;
            D;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_D_LongEnough;
        };

        t{  UnknownD;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureD;
            doResetIncrementSampleCtr;
        };

        // D => ...

        t{  D;
            D;
            evControlPilotObserver_Measure;
            gControlPilotWireMeasureD;
        };

        t{  D;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureD;
            doResetIncrementSampleCtr;
        };


        //UnknownE => ...

        t{  UnknownE;
            UnknownE;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_E_ButNotLongEnough;
            doIncrementSampleCtr;
        };

        t{  UnknownE;
            E;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_E_LongEnough;
        };

        t{  UnknownE;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureE;
            doResetIncrementSampleCtr;
        };

        // E => ...

        t{  E;
            E;
            evControlPilotObserver_Measure;
            gControlPilotWireMeasureE;
        };

        t{  E;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureE;
            doResetIncrementSampleCtr;
        };

        //UnknownF => ...

        t{  UnknownF;
            UnknownF;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_F_ButNotLongEnough;
            doIncrementSampleCtr;
        };

        t{  UnknownF;
            F;
            evControlPilotObserver_Measure;
            gControlPilotObserverMeasure_F_LongEnough;
        };

        t{  UnknownF;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureF;
            doResetIncrementSampleCtr;
        };

        // F => ...

        t{  F;
            F;
            evControlPilotObserver_Measure;
            gControlPilotWireMeasureF;
        };

        t{  F;
            Unknown;
            evControlPilotObserver_Measure;
            gNotControlPilotWireMeasureF;
            doResetIncrementSampleCtr;
        };



      
        // Unknown ==> ...
        t{  Unknown;
            UnknownA;
            gControlPilotWireMeasureA;
        };

        t{  Unknown;
            UnknownB;
            gControlPilotWireMeasureB;
        };
        
        t{  Unknown;
            UnknownC;
            gControlPilotWireMeasureC;
        };

        t{  Unknown;
            UnknownD;
            gControlPilotWireMeasureD;
        };

        t{  Unknown;
            UnknownE;
            gControlPilotWireMeasureE;
        };

        t{  Unknown;
            UnknownF;
            gControlPilotWireMeasureF;
        };
    };

    states{Initial;Wait;};
    
    t{Initial; Wait;};

    t{  Wait;
        ObserveState;
        evControlPilotObserverStart;
    };

    t{  ObserveState;
        Wait;
        evControlPilotObserverStop;
    };
};
